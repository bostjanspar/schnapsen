
@rules.md This is a rules used for these games.
 Please do not implement any logic in GUI, this is just for you to understand how
 the game works and layout should look like. 

@Screenshot.png This is the current view of the game.

At launching the game I get following error in the console. Take a look into the code and try to fix it. 

Let's create new scene: 
Select the dealer. 
In the middle of the screen where is a talun  display provided card from game logic

if it's a red then the player 1 dealer if a black suit then the player 2 is the dealer.
 Make some arrow animation if the player one make some arrow down animation  if it's a.
Player two dealer make an arrow up animation.




Use Context7 mcp to verify Three.js documentation  if  Three.js is used correctly and its best practice . Also update  @CLAUDE.md to use Context7 mcp for external documentation


@src/app/gui/scenes/game
@src/app/logic/game-logic.ts
I would need to plan how can game scene access game logic member variables like deck,playerHand,opponentHand. so i do not have to pass it over @src/app/gui/scenes/gui-controller.ts  , .
 But I definitely want to have it only read only  access game logic variables . Game scene should never be allowed to change anything on game logic side.
How could be the best way to achieve this? 
But it never reacts by itself when some of the game logic member variable changes. I will call it over the control class gui-controller.ts. 


Go through the code  of @src/app/gui/scenes/game and in @file src/app/gui/scenes/game/game.scene.ts implement to show talun and trumpCard under it.  display it as part of dealNewCards game.scene.ts



display number of cards in card deck   with animation 


@
1. Click Feedback – When the user clicks the deck, the stack gives a small bounce or lift, and a faint glow or highlight briefly appears around the deck.
2. Deck Expansion – The stack stretches upward as the cards separate slightly, making the pile look taller. Only the card backs are visible and no card faces are ever shown. This expansion lasts about 0.3 to 0.5 seconds.
3. Card Count Reveal – A floating number (for example, “37”) fades in above or beside the stack. The number can animate smoothly by counting up or down from the previous value.
4. Deck Collapse – After 1 to 2 seconds, the stack compresses back down into a neat pile. The floating number remains visible next to the deck.
5. Idle State – The deck rests face-down as before, and the number remains in place until the count changes again.
n.